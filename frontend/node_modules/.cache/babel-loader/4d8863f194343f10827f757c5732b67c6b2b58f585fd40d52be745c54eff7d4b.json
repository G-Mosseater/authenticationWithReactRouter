{"ast":null,"code":"var _jsxFileName = \"/home/gabon/Documents/Udemy React/Resources/React Authentication/01-starting-project/frontend/src/pages/Authentication.js\";\nimport AuthForm from \"../components/AuthForm\";\nimport { json } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthenticationPage() {\n  return /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 10\n  }, this);\n}\n_c = AuthenticationPage;\nexport default AuthenticationPage;\n\n//get access to the formdata with request\nexport async function action({\n  request\n}) {\n  // get the mode of query\n  const searchParams = new URL(request.url).searchParams;\n  const mode = searchParams.get(\"mode\") || \"login\";\n  if (mode !== 'login' && mode !== 'signup') {\n    throw json({\n      message: 'Unsuported mode'\n    }, {\n      status: 422\n    });\n  }\n  const data = request.formData();\n  const authData = {\n    email: data.get(\"email\"),\n    password: data.get(\"password\")\n  };\n  fetch('http://localhost:8080/' + mode);\n}\nvar _c;\n$RefreshReg$(_c, \"AuthenticationPage\");","map":{"version":3,"names":["AuthForm","json","jsxDEV","_jsxDEV","AuthenticationPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","searchParams","URL","url","mode","get","message","status","data","formData","authData","email","password","fetch","$RefreshReg$"],"sources":["/home/gabon/Documents/Udemy React/Resources/React Authentication/01-starting-project/frontend/src/pages/Authentication.js"],"sourcesContent":["import AuthForm from \"../components/AuthForm\";\nimport { json } from \"react-router-dom\";\nfunction AuthenticationPage() {\n  return <AuthForm />;\n}\n\nexport default AuthenticationPage;\n\n//get access to the formdata with request\nexport async function action({ request }) {\n  // get the mode of query\n  const searchParams = new URL(request.url).searchParams;\n  const mode = searchParams.get(\"mode\") || \"login\";\n  if(mode !== 'login' && mode !== 'signup') {\n    throw json({message: 'Unsuported mode'}, {status: 422})\n  }\n  const data = request.formData();\n  const authData = {\n    email: data.get(\"email\"),\n    password: data.get(\"password\"),\n  };\n  fetch('http://localhost:8080/' + mode)\n}\n"],"mappings":";AAAA,OAAOA,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACxC,SAASC,kBAAkBA,CAAA,EAAG;EAC5B,oBAAOD,OAAA,CAACH,QAAQ;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrB;AAACC,EAAA,GAFQL,kBAAkB;AAI3B,eAAeA,kBAAkB;;AAEjC;AACA,OAAO,eAAeM,MAAMA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EACxC;EACA,MAAMC,YAAY,GAAG,IAAIC,GAAG,CAACF,OAAO,CAACG,GAAG,CAAC,CAACF,YAAY;EACtD,MAAMG,IAAI,GAAGH,YAAY,CAACI,GAAG,CAAC,MAAM,CAAC,IAAI,OAAO;EAChD,IAAGD,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,QAAQ,EAAE;IACxC,MAAMd,IAAI,CAAC;MAACgB,OAAO,EAAE;IAAiB,CAAC,EAAE;MAACC,MAAM,EAAE;IAAG,CAAC,CAAC;EACzD;EACA,MAAMC,IAAI,GAAGR,OAAO,CAACS,QAAQ,CAAC,CAAC;EAC/B,MAAMC,QAAQ,GAAG;IACfC,KAAK,EAAEH,IAAI,CAACH,GAAG,CAAC,OAAO,CAAC;IACxBO,QAAQ,EAAEJ,IAAI,CAACH,GAAG,CAAC,UAAU;EAC/B,CAAC;EACDQ,KAAK,CAAC,wBAAwB,GAAGT,IAAI,CAAC;AACxC;AAAC,IAAAN,EAAA;AAAAgB,YAAA,CAAAhB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}