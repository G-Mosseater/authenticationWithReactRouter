{"ast":null,"code":"var _jsxFileName = \"/home/gabon/Documents/Udemy React/Resources/React Authentication/01-starting-project/frontend/src/components/AuthForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Form, Link, useSearchParams, useActionData, useNavigation } from \"react-router-dom\";\nimport classes from \"./AuthForm.module.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AuthForm() {\n  _s();\n  // const [isLogin, setIsLogin] = useState(true);\n\n  // function switchAuthHandler() {\n  //   setIsLogin((isCurrentlyLogin) => !isCurrentlyLogin);\n  // }\n  //useSearchParams is a hook that lets you read and modify the URL query parameters\n  //  (the ?key=value part of the URL)\n  const [searchParams] = useSearchParams();\n  const isLogin = searchParams.get(\"mode\") === \"login\";\n\n  // Get data returned from the action function\n  const data = useActionData(); // ← This will contain whatever your action function returned\n  const navigation = useNavigation(); // ← Gives info about the current form submission/navigation state\n  const isSubmitting = navigation.state === \"submitting\";\n\n  //   How this works:\n\n  // 1️⃣ When your AuthForm submits, React Router calls the `action` function for that route.\n  // 2️⃣ Inside the action, you can process the form data, send requests, and return a response.\n  // 3️⃣ If the action returns something (like `return response` for errors), \n  //    `useActionData()` gives you access to that data in your component.\n  // 4️⃣ `useNavigation()` tracks navigation and submission states, \n  //    which allows you to show loading indicators or disable buttons while the form is submitting.\n  // */\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      method: \"post\",\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: isLogin ? \"Log in\" : \"Create a new user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), data && data.errors && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.values(data.errors).map(err => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: err\n        }, err, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), data && data.message && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", data.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"email\",\n          type: \"email\",\n          name: \"email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"password\",\n          type: \"password\",\n          name: \"password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `?mode=${isLogin ? \"signup\" : \"login\"}`,\n          children: isLogin ? \"Create new user\" : \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: isSubmitting,\n          children: isSubmitting ? \"Submitting\" : \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(AuthForm, \"Jgf88LY/Gn4C6WvwHiRsy1LUK/g=\", false, function () {\n  return [useSearchParams, useActionData, useNavigation];\n});\n_c = AuthForm;\nexport default AuthForm;\nvar _c;\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["useState","Form","Link","useSearchParams","useActionData","useNavigation","classes","jsxDEV","_jsxDEV","Fragment","_Fragment","AuthForm","_s","searchParams","isLogin","get","data","navigation","isSubmitting","state","children","method","className","form","fileName","_jsxFileName","lineNumber","columnNumber","errors","Object","values","map","err","message","htmlFor","id","type","name","required","actions","to","disabled","_c","$RefreshReg$"],"sources":["/home/gabon/Documents/Udemy React/Resources/React Authentication/01-starting-project/frontend/src/components/AuthForm.js"],"sourcesContent":["import { useState } from \"react\";\nimport {\n  Form,\n  Link,\n  useSearchParams,\n  useActionData,\n  useNavigation,\n} from \"react-router-dom\";\n\nimport classes from \"./AuthForm.module.css\";\n\nfunction AuthForm() {\n  // const [isLogin, setIsLogin] = useState(true);\n\n  // function switchAuthHandler() {\n  //   setIsLogin((isCurrentlyLogin) => !isCurrentlyLogin);\n  // }\n  //useSearchParams is a hook that lets you read and modify the URL query parameters\n  //  (the ?key=value part of the URL)\n  const [searchParams] = useSearchParams();\n  const isLogin = searchParams.get(\"mode\") === \"login\";\n\n  // Get data returned from the action function\n  const data = useActionData(); // ← This will contain whatever your action function returned\n  const navigation = useNavigation(); // ← Gives info about the current form submission/navigation state\n  const isSubmitting = navigation.state === \"submitting\";\n\n//   How this works:\n\n// 1️⃣ When your AuthForm submits, React Router calls the `action` function for that route.\n// 2️⃣ Inside the action, you can process the form data, send requests, and return a response.\n// 3️⃣ If the action returns something (like `return response` for errors), \n//    `useActionData()` gives you access to that data in your component.\n// 4️⃣ `useNavigation()` tracks navigation and submission states, \n//    which allows you to show loading indicators or disable buttons while the form is submitting.\n// */\n  return (\n    <>\n      <Form method=\"post\" className={classes.form}>\n        <h1>{isLogin ? \"Log in\" : \"Create a new user\"}</h1>\n        {data && data.errors && (\n          <ul>\n            {Object.values(data.errors).map((err) => (\n              <li key={err}>{err}</li>\n            ))}\n          </ul>\n        )}\n        {data && data.message && <p> {data.message}</p>}\n        <p>\n          <label htmlFor=\"email\">Email</label>\n          <input id=\"email\" type=\"email\" name=\"email\" required />\n        </p>\n        <p>\n          <label htmlFor=\"image\">Password</label>\n          <input id=\"password\" type=\"password\" name=\"password\" required />\n        </p>\n        <div className={classes.actions}>\n          {/* switch between modes with useSearchParams */}\n          <Link to={`?mode=${isLogin ? \"signup\" : \"login\"}`}>\n            {isLogin ? \"Create new user\" : \"Login\"}\n          </Link>\n          <button disabled={isSubmitting}>\n            {isSubmitting ? \"Submitting\" : \"Save\"}\n          </button>\n        </div>\n      </Form>\n    </>\n  );\n}\n\nexport default AuthForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}